root = true

[*]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 4
tab_width = 4
trim_trailing_whitespace = true
insert_final_newline = true
max_line_length = 120

[**/[Gg]enerated/**]
generated_code = true

[*.{json,yml,yaml,sh,csproj,xml,props}]
indent_size = 2

[*.md]
trim_trailing_whitespace = false

[*.cs]
# Organize usings
# dotnet_separate_import_directive_groups = false
# dotnet_sort_system_directives_first = false
# file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# Code-block preferences
csharp_prefer_braces = when_multiline:suggestion
csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
# csharp_using_directive_placement = inside_namespace:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/coding-style.md
# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# static readonly fields should be PascalCase
dotnet_naming_rule.static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_pascal_case.symbols  = static_readonly_fields
dotnet_naming_rule.static_fields_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.static_readonly_fields.applicable_kinds   = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly
dotnet_naming_symbols.static_readonly_fields.applicable_accessibilities = private, internal, private_protected

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style    = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_symbols.static_fields.applicable_accessibilities = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style    = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case


# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# Sonar rules
#[S125] Remove this commented out code.
dotnet_diagnostic.S125.severity = none
#[S1135] Complete the task associated to this 'TODO' comment.
dotnet_diagnostic.S1135.severity = none
#[S6608] Indexing at 0 should be used instead of the "Enumerable" extension method "First" (https://rules.sonarsource.com/csharp/RSPEC-6608)
dotnet_diagnostic.S6608.severity = none
#[S6602] "Array.Find" static method should be used instead of the "FirstOrDefault" extension method. (https://rules.sonarsource.com/csharp/RSPEC-6602)
dotnet_diagnostic.S6602.severity = none
#[S6603] The collection-specific "TrueForAll" method should be used instead of the "All" extension (https://rules.sonarsource.com/csharp/RSPEC-6603)
dotnet_diagnostic.S6603.severity = none
#[S2955] Use a comparison to 'default(TKey)' instead or add a constraint to 'TKey' so that it can't be a value type. (https://rules.sonarsource.com/csharp/RSPEC-2955)
dotnet_diagnostic.S2955.severity = none
#[S6667] Logging in a catch clause should pass the caught exception as a parameter. (https://rules.sonarsource.com/csharp/RSPEC-6667)
dotnet_diagnostic.S6667.severity = none
#[S6934] Specify the RouteAttribute when an HttpMethodAttribute or RouteAttribute is specified at an action level. (https://rules.sonarsource.com/csharp/RSPEC-6934)
dotnet_diagnostic.S6934.severity = none
#[S1133] Do not forget to remove this deprecated code someday. (https://rules.sonarsource.com/csharp/RSPEC-1133)
dotnet_diagnostic.S1133.severity = none
#[S2094] Remove this empty record, write its code or make it an "interface". (https://rules.sonarsource.com/csharp/RSPEC-2094)
dotnet_diagnostic.S2094.severity = none

# StyleCop rules
#[SA0001] Xml Comment Analysis Disabled
dotnet_diagnostic.SA0001.severity = none
#[SA1101] Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none
#[SA1118] The parameter spans multiple lines
dotnet_diagnostic.SA1118.severity = none
#[SA1124] Do not use regions
dotnet_diagnostic.SA1124.severity = none
#[SA1200] Using directive should appear within a namespace declaration
dotnet_diagnostic.SA1200.severity = none
#[SA1201] A interface should not follow a class
dotnet_diagnostic.SA1201.severity = none
#[SA1204] A static element is positioned beneath an instance element.
dotnet_diagnostic.SA1204.severity = none
#[SA1309] Field name should not begin with an underscore
dotnet_diagnostic.SA1309.severity = none
#[SA1310] Field name should not contain an underscore
dotnet_diagnostic.SA1310.severity = none
#[SA1402] File may only contain a single type
dotnet_diagnostic.SA1402.severity = none
#[SA1503] The opening and closing braces for a C# statement have been omitted.
dotnet_diagnostic.SA1503.severity = none
#[SA1512] SingleLineCommentsMustNotBeFollowedByBlankLine
dotnet_diagnostic.SA1512.severity = none
#[SA1600] Elements should be documented
dotnet_diagnostic.SA1600.severity = none
#SA1601 Partial Elements Must Be Documented
dotnet_diagnostic.SA1601.severity = none
#SA1602 Enumeration Items Must Be Documented
dotnet_diagnostic.SA1602.severity = none
#[SA1614] Element parameter documentation should have text
dotnet_diagnostic.SA1614.severity = none
#[SA1616] Element return value documentation should have text
dotnet_diagnostic.SA1616.severity = none
#[SA1623] The property's documentation summary text should begin with: 'Gets'
dotnet_diagnostic.SA1623.severity = none
#[SA1629] Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = none
#[SA1633] The file header is missing or not located at the top of the file.
dotnet_diagnostic.SA1633.severity = none
#[SA1649] File name should match first type name
dotnet_diagnostic.SA1649.severity = none
#[S3925] Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.
dotnet_diagnostic.S3925.severity = none

[*.Tests.cs]
#[SA1202] 'public' members should come before 'private' members
dotnet_diagnostic.SA1202.severity = none
#[SA1649] File Name Must Match Type Name
dotnet_diagnostic.SA1649.severity = none

[Program.cs]
#[SA1516] Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = none

#Дискуссионные подавления
dotnet_diagnostic.SA1503.severity = none
dotnet_diagnostic.SA1316.severity = none
dotnet_diagnostic.SA1407.severity = none
